const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { merge } = require('webpack-merge');
const modeConfig = (env) => require(`./build-utils/webpack.${env}`)(env);

module.exports = ({ mode } = { mode: 'production' }) => {
  return merge(
    {
      mode: mode,
      entry: './src/index.js',
      module: {
        rules: [
          {
            test: /\.jpe?g$/,
            use: 'url-loader',
          },
          {
            test: /\.html$/,
            use: 'html-loader',
          },
          {
            test: /\.(svg|png|gif)$/,
            use: {
              loader: 'file-loader',
              options: {
                name: '[name].[ext]',
                publicPath: '/',
              },
            },
          },
          {
            test: /\.scss$/,
            use: [
              // Creates `style` nodes from JS strings
              'style-loader',
              // Translates CSS into CommonJS
              'css-loader',
              // Compiles Sass to CSS
              'sass-loader',
            ],
          },
        ],
      },
      output: {
        filename: 'main.js',
      },
      plugins: [
        new HtmlWebpackPlugin({
          // este plug crea un html y agrega el bundle.js con el tag script
          template: './src/template.html',
        }),
        new webpack.ProgressPlugin(),
      ],
    },
    modeConfig(mode)
  );
};

//css-loader is the npm module that would help webpack to collect CSS from all the css files referenced in your application and put it into a string.

// And then style-loader would take the output string generated by the above css-loader and put it inside the <style> tags in the index.html file.
